Block=$1
if [ "$1" = "" ]; then
 echo missing block arg
 exit 1
fi
echo GO
DIR=`pwd`    #chassis
echo Directory: $DIR

if [ "${Block}" = "Block1" ]; then
  echo HI
  #sledlist="1 2 3 4"
  #sledlist="1 2 3 4"
  sledlist="1 2 3 4"
elif [ "$Block" = "Block2" ]; then
  echo HI2
  sledlist="1 2 3 4 5 6 7 8"
elif [ "$Block" = "Block3" ]; then
  sledlist="1 2 3 4"
elif [ "$Block" = "Block4" ]; then
  sledlist="1 2 3 4 5 6 7 8"
elif [ "$Block" = "Test" ]; then
  Block="Block1"
  sledlist="1"
else
  echo "Block<id> invalid: $Block"
  echo exiting
  exit 1
fi

echo SLEDLIST: $sledlist
#exit 1

#for ss in 1 #test
for ss in $sledlist
do
sled=Rack1-${Block}-Sled${ss}-Node1
#xgSled=Sled${ss}
#xgBlock=${Block}
echo SLED: $sled
cd $sled
echo IN SLED DIR  "--pwd   ls-l"
#pwd
#ls -l
# now we do the logic for the sled node
  # this will replace the Dell oem tag if you want
  #sed -i 's/"Dell":/"Dell.com_G5MC:"/' ./index.json

# fix storage
pch="./SimpleStorage/pch/index.json"
perc="./SimpleStorage/perc/index.json"

#fix Health: OK,  json error
#xg99
sed -i 's/"State": "Disabled",/"State": "Disabled"/g' $perc
sed -i 's/"State": "Disabled",/"State": "Disabled"/g' $pch
sed -i 's/"State": "Absent",/"State": "Absent"/g' $perc
sed -i 's/"State": "Absent",/"State": "Absent"/g' $pch
#sed -i 's/"Health": "OK",/"Health": "OK"/g' $perc
#sed -i 's/"Health": "OK",/"Health": "OK"/g' $pch
#sed -i '$d' $perc
#sed -i '$d' $perc
#sed -i '$d' $perc
#sed -i '$r ../xg66perc.txt' $perc

#fix block 1 and 3 model and capacity for perc
#sed -i 's/"Model": "ST1000NM0024"/"Model": "ST6000NM0024"/g' $perc
#sed -i 's/7931231343200/5948423507400/g' $perc

#fix descriptioin and name swap
  #sed -i  -e 's/"Name"/"Namexg"/'  -e 's/"Description"/"Name"/'  $pch
  #sed -i  -e 's/"Namexg"/"Description"/'  $pch

  #sed -i  -e 's/"Name": "PERC.*/"Name": "PERC",/'  $perc
  #sed -i  -e 's/"PowerEdge_RAID_CARD"/"PowerEdge RAID Card (PERC) Simple Storage Controller"/'  $perc
#fix error from above setting DRIVE "Name" to "Description"
#sed  's/"Description": "Drive_"/"Name": "Drive_/' $pch
#sed 's/"Description"/"EEEEEEE"/' $pch
#sed -i 's/"Description": "Drive/"Name": "Drive/g' $pch

##enet1="./EthernetInterfaces/1/index.json"
##enet2="./EthernetInterfaces/2/index.json"
  #sed -i -e 's/"Name"/"Namexg"/' -e 's/"Description"/"Name"/' ${enet1}
  #sed -i -e 's/"Namexg"/"Description"/'  ${enet1}

  #sed -i -e 's/"Name"/"Namexg"/' -e 's/"Description"/"Name"/' ${enet2}
  #sed -i -e 's/"Namexg"/"Description"/'  ${enet2}

  #sed -i -e '/"SpeedMbps/,$d' -e '/"MACAddress/s/.$//' -e '/"MACAddress/a}' ${enet2}
  #sed -i '/"FactoryMACAddress/d'  ${enet2}


#P fix procs
  # first, remove last 2 lines
  #sed -i '$d' ./Processors/1/index.json
  #sed -i '$d' ./Processors/1/index.json
  #sed -i '$d' ./Processors/2/index.json
  #sed -i '$d' ./Processors/2/index.json
  # 2nd, read oem data
  #sed -i '$r ../xgProcOem' ./Processors/1/index.json
  #sed -i '$r ../xgProcOem' ./Processors/2/index.json
  # fix OEM to Oem
  #sed -i 's/OEM/Oem/g' ./Processors/1/index.json
  #sed -i 's/OEM/Oem/g' ./Processors/2/index.json

# fix perc directory
  #x sed -i 's/lsiCard/perc/g' ./SimpleStorage/index.json
  # fix perc dir name in storage
  #xmv ./SimpleStorage/lsiCard ./SimpleStorage/perc
  # s/lsiCard/perc in the controller entry
  #xsed -i 's/lsiCard/perc/g' ./SimpleStorage/perc/index.json

# fix sled#s in block1 and 2
  # running on sled1, change links from sled2 to sled1 or sled3
  #x for xgfilex in `cat ../xgFiles`
  #x do
  #x sed -i 's/Sled2/Sled3/g' $xgfilex
  #x done

# put a xgxgxg marker above the Dell OEM tag
  #sed -i -e '/"Dell":/i xgxgxg' -e '/"Dell":/,+4d' ./index.json
  # now insert the new file after this
  #sed -i -e '/xgxgxg/r ../xgOem' ./index.json
  # now put in proper sled#
  #sed -i "s/Sledxg/${xgSled}/" ./index.json
  # now put in proper block#
  #sed -i "s/Blockxg/${xgBlock}/" ./index.json
  # now delete the marker line
  #sed -i '/xgxgxg/d' ./index.json


# go on to next sled
cd $DIR
done
